{"version":3,"sources":["modules/api/actions.js","modules/api/selectors.js","hooks/useFetch.js","modules/api/endpoints.js","modules/app/actions.js","modules/app/selectors.js","components/common/NavigationItem.js","components/common/Navigation.js","components/Jobs/index.jsx","components/common/ProfileCard.js","components/common/ProfileGrid.js","components/Employees/index.jsx","App.js","modules/api/reducer.js","modules/api/api.js","modules/api/saga.js","modules/app/reducer.js","store.js","index.js"],"names":["API_ACTIONS","apiActions","endpoint","payload","type","toUpperCase","selectApiState","state","api","useFetch","dispatch","useDispatch","apiState","useSelector","performFetch","useCallback","data","response","useMemo","camelcase","JOBS","EMPLOYEES","ENDPOINTS","uri","method","APP_ACTIONS","selectAppState","store","app","NavigationItem","id","jobId","title","appState","action","ListItem","button","onClick","selected","selectedJob","ListItemText","primary","drawerWidth","useStyles","makeStyles","theme","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","display","toolbar","mixins","drawerPaper","Navigation","loading","services","classes","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","Grid","container","justify","CircularProgress","map","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","document","body","open","onClose","paper","ModalProps","keepMounted","xsDown","Jobs","useEffect","root","padding","avatar","alignItems","justifyContent","ProfileCard","src","subSpecialties","Card","Avatar","alt","CardContent","content","component","length","flexWrap","item","flexBasis","down","ProfileGrid","profiles","profile","name","job","Employees","preparedData","Array","isArray","filter","employee","flexGrow","App","INITIAL_STATE","Object","keys","reduce","acc","next","error","apiReducer","startsWith","inner","replace","baseUrl","endpoints","this","a","fetch","generateRequest","json","onApiLoad","watchApiLoad","apiRootSaga","actionType","toLowerCase","put","takeEvery","all","state2actionMapping","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","apiSaga","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.a6d42e25.chunk.js","sourcesContent":["export const API_ACTIONS = {\n  FETCH_START: 'FETCH_START_',\n  FETCH_SUCCESS: 'FETCH_SUCCESS_',\n  FETCH_FAILURE: 'FETCH_FAILURE_'\n}\n\nexport const apiActions = {\n  fetch: (endpoint, payload) => ({\n    type: `${API_ACTIONS.FETCH_START}${endpoint.toUpperCase()}`,\n    payload\n  }),\n  fetchSuccess: (endpoint, payload) => ({\n    type: `${API_ACTIONS.FETCH_SUCCESS}${endpoint.toUpperCase()}`,\n    payload\n  }),\n  fetchFailure: (endpoint, payload) => ({\n    type: `${API_ACTIONS.FETCH_FAILURE}${endpoint.toUpperCase()}`,\n    payload\n  })\n}","export const selectApiState = state => state.api;","import {useCallback, useMemo} from 'react';\nimport camelcase from \"camelcase\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {apiActions} from \"../modules/api/actions\";\nimport {selectApiState} from \"../modules/api/selectors\";\n\nconst useFetch = endpoint => {\n  const dispatch = useDispatch();\n  const apiState = useSelector(selectApiState);\n\n  const performFetch = useCallback(data =>\n    dispatch(apiActions.fetch(endpoint, data)),\n    [endpoint, dispatch]\n  );\n\n  const response = useMemo(() => apiState[camelcase(endpoint)], [apiState, endpoint]);\n\n  return {response, performFetch};\n};\n\nexport default useFetch;","export const JOBS = 'jobs';\nexport const EMPLOYEES = 'employees';\n\nconst ENDPOINTS = {\n  [JOBS]: {\n    uri: '/jobs',\n    method: 'GET'\n  },\n  [EMPLOYEES]: {\n    uri: '/employees',\n    method: 'GET'\n  }\n};\n\nexport default ENDPOINTS;","export const APP_ACTIONS = {\n  APP_FILTER_EMPLOYEES: 'APP_FILTER_EMPLOYEES'\n}\n\nexport function filterEmployees(filterBy) {\n  return {\n    type: APP_ACTIONS.APP_FILTER_EMPLOYEES,\n    payload: filterBy\n  };\n}","export const selectAppState = store => store.app;","import React, {useCallback} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { filterEmployees } from '../../modules/app/actions';\nimport {selectAppState} from \"../../modules/app/selectors\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function NavigationItem({ id, jobId, title}) {\n\n  const dispatch = useDispatch();\n  const appState = useSelector(selectAppState);\n  const action = useCallback(() => {\n    dispatch(filterEmployees(jobId))\n  }, [jobId, dispatch])\n\n  return (\n    <ListItem button onClick={action} selected={jobId === appState.selectedJob}>\n      <ListItemText primary={title} />\n    </ListItem>\n  );\n}","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ServiceItem from './NavigationItem';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nexport default function Navigation({ loading, services, title = '' }) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleDrawerToggle = useCallback(() => {\n    setMobileOpen(!mobileOpen);\n  }, [mobileOpen]);\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {loading || !services ? (\n          <Grid container justify='center'>\n            <CircularProgress />\n          </Grid>\n        ) : (\n          services.map(({ id, jobId, title }) => (\n            <ServiceItem key={id} jobId={jobId} title={title} />\n          ))\n        )}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <>\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='mailbox folders'>\n        <Hidden smUp implementation='css'>\n          <Drawer\n            container={() => document.body}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </>\n  );\n}\n","import React from 'react';\nimport useFetch from \"../../hooks/useFetch\";\nimport {JOBS} from \"../../modules/api/endpoints\";\nimport {useEffect} from 'react';\nimport Navigation from \"../common/Navigation\";\n\nexport default function Jobs() {\n\n  const {response, performFetch} = useFetch(JOBS);\n\n  const {loading, data} = response;\n\n  useEffect(() => {\n    performFetch()\n  }, [performFetch]);\n\n  return <Navigation loading={loading} services={data} title={'react + redux + redux-saga app'} />;\n}","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    padding: '4px 24px'\n  },\n  avatar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\n\nexport default function ProfileCard({ src, title, subSpecialties }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <div className={classes.avatar}>\n          <Avatar alt={title} src={src} />\n        </div>\n        <div>\n          <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\">\n              {title}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {(subSpecialties && subSpecialties.length > 0) ? subSpecialties : ' – '}\n            </Typography>\n          </CardContent>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nProfileCard.propTypes = {\n  src: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  subSpecialties: PropTypes.string\n}","import React from 'react';\nimport ProfileCard from './ProfileCard';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  item: {\n    padding: '10px',\n    [theme.breakpoints.up('sm')]: {\n      flexBasis: '50%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '100%'\n    },\n    [theme.breakpoints.up('lg')]: {\n      flexBasis: '33.33%'\n    },\n  }\n}));\n\nexport default function ProfileGrid({profiles = [], loading}) {\n  const classes = useStyles();\n\n  if (loading || !profiles) {\n    return (\n      <Grid container justify='center'>\n        <CircularProgress />\n      </Grid>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      {profiles\n        .map(profile => (\n          <div key={profile.id} className={classes.item}>\n            <ProfileCard\n              src={profile.avatar}\n              title={profile.name}\n              subSpecialties={profile.job}\n            />\n          </div>\n        ))}\n    </div>\n  )\n}","\nimport React, {useEffect, useMemo} from 'react';\nimport { EMPLOYEES } from 'modules/api/endpoints';\nimport useFetch from 'hooks/useFetch';\nimport ProfileGrid from 'components/common/ProfileGrid';\nimport { useSelector } from 'react-redux';\nimport { selectAppState } from 'modules/app/selectors';\n\nexport default function Employees() {\n  const {response, performFetch} = useFetch(EMPLOYEES);\n  const {loading, data} = response;\n  const appState = useSelector(selectAppState);\n\n  useEffect(() => {\n    performFetch();\n  }, [performFetch]);\n\n  const preparedData = useMemo(() => {\n    if (!Array.isArray(data)) {\n      return [];\n    }\n\n    if (!appState.selectedJob) {\n      return data;\n    }\n\n    return data.filter(employee => employee.job === appState.selectedJob);\n  }, [data, appState.selectedJob]);\n\n  return <ProfileGrid profiles={preparedData} loading={loading} />\n}","import React from 'react'\n\nimport Jobs from 'components/Jobs';\nimport Employees from 'components/Employees';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Jobs />\n      <main className={classes.content}>\n        <div className={classes.toolbar}>\n          <Employees />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import camelcase from 'camelcase';\n\nimport ENDPOINTS from \"./endpoints\";\nimport {API_ACTIONS} from \"./actions\";\n\nfunction initApiState() {\n  return Object.keys(ENDPOINTS).reduce((acc, next) => {\n\n    acc[camelcase(next)] = {\n      data: null,\n      loading: false,\n      error: null\n    };\n\n    return acc;\n  }, {});\n}\n\nconst INITIAL_STATE = initApiState();\n\nconst apiReducer = (state = INITIAL_STATE, action) => {\n\n  if (action.type.startsWith(API_ACTIONS.FETCH_START)) {\n    const inner = camelcase(action.type.replace(API_ACTIONS.FETCH_START, ''));\n\n    return {\n      ...state,\n      [inner]: {\n        ...state[inner],\n        loading: true,\n        error: null\n      }\n    };\n  }\n  if (action.type.startsWith(API_ACTIONS.FETCH_SUCCESS)) {\n    const inner = camelcase(action.type.replace(API_ACTIONS.FETCH_SUCCESS, ''));\n    return {\n      ...state,\n      [inner]: {\n        ...state[inner],\n        data: action.payload,\n        loading: false,\n        error: null\n      }\n    };\n  }\n  if (action.type.startsWith(API_ACTIONS.FETCH_FAILURE)) {\n    const inner = camelcase(action.type.replace(API_ACTIONS.FETCH_FAILURE, ''));\n    return {\n      ...state,\n      [inner]: {\n        ...state[inner],\n        loading: false,\n        error: action.payload\n      }\n    };\n  }\n\n  return state\n}\n\nexport default apiReducer;","import endpoints from './endpoints'\n\nconst BASE_URL = 'https://5f7998dbe402340016f9321f.mockapi.io/';\n\nclass Api {\n  constructor(baseUrl, endpoints) {\n    this.baseUrl = baseUrl;\n    this.endpoints = endpoints;\n  }\n\n  async generateRequest(endpoint, data) {\n    const {method, uri} = endpoints[endpoint];\n\n    return fetch(`${this.baseUrl}${uri}`, {method, body: data});\n  }\n\n  async fetch(endpoint, data) {\n    const response = await this.generateRequest(endpoint, data);\n\n    return response.json();\n  }\n}\n\nexport default new Api(BASE_URL,endpoints)","import api from './api';\nimport {takeEvery, put, all} from 'redux-saga/effects';\nimport {apiActions, API_ACTIONS} from \"./actions\";\n\nexport function* onApiLoad({payload, type}) {\n  const actionType = type.replace(API_ACTIONS.FETCH_START, '').toLowerCase();\n\n  try {\n    const response = yield api.fetch(actionType, payload);\n\n    yield put(apiActions.fetchSuccess(actionType, response));\n  } catch(e) {\n    yield put(apiActions.fetchFailure(actionType, e))\n  }\n\n}\n\nexport function* watchApiLoad() {\n  yield takeEvery(action => action.type.startsWith(API_ACTIONS.FETCH_START), onApiLoad);\n}\n\nexport default function* apiRootSaga() {\n  yield all([\n    watchApiLoad()\n  ])\n}","import { APP_ACTIONS } from 'modules/app/actions';\n\nfunction getInitialState() {\n  return {\n    selectedJob: null\n  };\n}\n\nconst INITIAL_STATE = getInitialState();\n\nconst state2actionMapping = {\n  [APP_ACTIONS.APP_FILTER_EMPLOYEES]: (state, action) => {\n    return {\n      ...state,\n      selectedJob: action.payload\n    };\n  }\n}\n\nconst appReducer = (state = INITIAL_STATE, action) => {\n  return state2actionMapping[action.type] ? state2actionMapping[action.type](state, action) : state;\n}\n\nexport default appReducer;","import {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport apiReducer from \"./modules/api/reducer\";\nimport apiSaga from \"./modules/api/saga\";\nimport appReducer from \"./modules/app/reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n  compose;\n\nconst reducers = combineReducers({\n    api: apiReducer,\n    app: appReducer\n  }\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(apiSaga)\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from 'App';\nimport {Provider} from 'react-redux';\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}